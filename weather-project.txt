print('//**************************************************************************************************************************')
print('// DSC510_Final Project-Weather')
print('// Course: DSC510_Introduction to programming-Python')
print('// Author Name: Soukhna Wade  ')
print('// Date:   11/20/2020')
print('//***************************************************************************************************************************\n')

import requests
from pprint import pprint

# Global Variables
# Note that there are restrictions on the "Free API"  Make sure that you don't submit too many requests

apiKey = "c05250b637031a772b7adbfe110350c5"
url = "http://api.openweathermap.org/data/2.5/weather"
headers = {
    'cache-control': "no-cache",
}

# This method will do a weather lookup by city by taking the city as a parameter

def retrieveWeatherByCity(city):
    querystring = {"q": city + ",us", "units": "imperial", "APPID": apiKey}
    try:
        response = requests.request("GET", url, headers=headers, params=querystring)
    except requests.exceptions.RequestException as e:
        print(e)

    parseWeather(response)


# This method will do a weather lookup by zip
# This method takes the zipCode as a parameter
def retrieveWeatherByZip(zipCode):
    querystring = {"zip": zipCode + ",us", "units": "imperial", "APPID": apiKey}
    try:
        response = requests.request("GET", url, headers=headers, params=querystring)
    except requests.exceptions.RequestException as e:
        print(e)

    # print(response.url)
    # print(response.text)

    parseWeather(response)

# The following method will parse the weather data, present that weather data to the user then takes the response as a parameter

def parseWeather(response):
    weatherJSON = response.json()

    # print(weatherJSON) This is a great troubleshooting line which can be quickly enabled to see your JSON
    pressure = weatherJSON['main']['pressure']
    temp = weatherJSON['main']['temp']
    maxTemp = weatherJSON['main']['temp_max']
    minTemp = weatherJSON['main']['temp_min']
    humidity = weatherJSON['main']['humidity']
    clouds = weatherJSON['clouds']['all']

    if (clouds > 75):
        cloudiness = "Full Cloud Cover"
    elif (clouds > 50 and clouds < 75):
        cloudiness = "Partial Cloud Cover"
    else:
        cloudiness = "Minimual Cloud Cover"
    print("\nCurrent Weather Conditions For " + weatherJSON['name'])
    print("Current Temp: " + str(temp) + " degrees")
    print("High Temp: " + str(maxTemp) + " degrees")
    print("Low Temp: " + str(minTemp) + " degrees")
    print("Pressure: " + str(pressure) + "hPa")
    print("Humidity: " + str(humidity) + "%")
    print("Cloud Cover: " + cloudiness)


"""
   This mian method will prompt the user to make a selection between doing a weather lookup based upon city or zipcode
   The main method will then call a method to do the weather lookup based upon whether the user entered a city or zip
"""

def main():
    runApp = True
    # The program should allow the user to run it multiple times.  This is one way to do that.
    while runApp:
        lookupType = input(
            "\nWould you like to lookup weather data by US City or zip code? Enter 1 for US City 2 for zip: ")

        if (lookupType == "1"):
            city = input("Please Enter The City Name: ")
            retrieveWeatherByCity(city)
        elif (lookupType == "2"):
            zipCode = input("Please enter the zip code: ")
            retrieveWeatherByZip(zipCode)
        else:
            print("Enter a valid option.  Please enter 1 to lookup by city.  Enter 2 to lookup by zip code")
        runApp = input("\nWould you like to perform another weather lookup? (Y/N): ").lower()
        if runApp in 'n':
            break


if __name__ == "__main__":
    main()





"""	Weather Program
For your class project we will be creating an application to interacts with a webservice in order to obtain data. Your program will use all of the information you’ve learned in the class in order to create a useful application.
Your program must prompt the user for their city or zip code and request weather forecast data from OpenWeatherMap. Your program must display the weather information in a READABLE format to the user.
Requirements:
		? Create a header for your program just as you have in the past.
		? Create a Python Application which asks the user for their zip code or city.
		? Use the zip code or city name in order to obtain weather forecast data from OpenWeatherMap.
		? Display the weather forecast in a readable format to the user.
		? Use comments within the application where appropriate in order to document what the program is doing.
		? Use functions including a main function.
		? Allow the user to run the program multiple times to allow them to look up weather conditions for multiple locations.
		? Validate whether the user entered valid data. If valid data isn’t presented notify the user.
		? Use the Requests library in order to request data from the webservice.
			§ Use Try blocks to ensure that your request was successful. If the connection was not successful display a message to the user.
		? Use Python 3
		? Use try blocks when establishing connections to the webservice. You must print a message to the user indicating whether or not the connection was successful
Deliverables:
		? Final Program in a .py file (Due week 12)
Project Notes:
			§ Be creative. This assignment is a real world program. Use it as an opportunity to improve your knowledge.
			§ Sign up for API Key.
			§ The API key will look something similar to this: d5751b1a9e2e4b2b8c7983646072da8b
			§ Make a connection to the API using the Requests library.

	OpenWeatherMap
	API_key='c05250b637031a772b7adbfe110350c5'
	http://api.openweathermap.org/data/2.5/weather
	https://www.getpostman.com/downloads/
	https://jsoneditoronline.org/
	From  postman

	 "main": {
	        "temp": 280.44,
	        "pressure": 1017,
	        "humidity": 61,
	        "temp_min": 279.15,
	        "temp_max": 281.15
	    },
	Paste to  https://jsoneditoronline.org/ :
	{
		        "temp": 280.44,
		        "pressure": 1017,
		        "humidity": 61,
		        "temp_min": 279.15,
		        "temp_max": 281.15

	}
"""



